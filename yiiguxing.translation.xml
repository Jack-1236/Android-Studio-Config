<application>
  <component name="AppStorage">
    <histories>
      <item value="Keep" />
      <item value="Cleartext HTTP traffic to www.baidu.com not permitted" />
      <item value="[Penguin]can't get PerfManager" />
      <item value="git@github.com: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists." />
      <item value="kex_exchange_identification: Connection closed by remote host Connection closed by 20.205.243.166 port 22 fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists." />
      <item value="no draw overlay permission" />
      <item value="The permission should be defined JO- com.example.plushservice.permission.JOPERATE_MESSAGE" />
      <item value="get Receiver Permission:com.example.plushservice.permission.JPUSH MESSAGE" />
      <item value="No Network Security Config specified, using platform default" />
      <item value="Attribute meta-dataJPUSH_CHANNEL@value at AndroidManifest.xml requires a placeholder substitution but no value for &lt;JPUSH_CHANNEL&gt; is provided." />
      <item value="A failure occurred while executing" />
      <item value="Unable to delete directory 'C:\Users\TAN18\.gradle\caches\transforms-3\45748b5940486b718adf20af2b1847e6\transformed' Failed to delete some children. This might happen because a process has files open or has its working directory set in the target directory." />
      <item value="Flag for requesting that window content changes should be animated using a TransitionManager. The TransitionManager is set using setTransitionManager(TransitionManager). If none is set, a default TransitionManager will be used. See Also: setContentView" />
      <item value="uild was configured to prefer settings repositories over project repositories but repository 'flatDir' was added by build file 'jiguang\build.gradle'" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="14" />
        <entry key="ENGLISH" value="15" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1676991203247" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1683198637466" />
  </component>
  <component name="Translation.States">
    <histories>
      <item value="Returns `true` if collection has at least one element." />
      <item value="A failure occurred while executing org.jetbrains.kotlin.gradle.internal.KaptWithoutKotlincTaskKaptExecutionWorkAction &gt; java.lang.reflect.InvocationTargetException (no error message)" />
      <item value="The specified Android SDK Build Tools version (24.0.3) is ignored, as it is below the minimum supported version (30.0.3) for Android Gradle Plugin 8.0.0. Android SDK Build Tools 30.0.3 will be used. To suppress this warning, remove &quot;buildToolsVersion '24.0.3'&quot; from your build.gradle file, as each version of the Android Gradle Plugin now has a default version of the build tools." />
      <item value="'compileDebugJavaWithJavac' task (current target is 11) and 'compileDebugKotlin' task (current target is 1.8) jvm target compatibility should be set to the same Java version." />
      <item value="Soap Object" />
      <item value="Soap Fault" />
      <item value="Get User Configuration" />
      <item value="enough To Filter" />
      <item value="App Compat Auto Complete Text View" />
      <item value="My Auto Complete Text View" />
      <item value="set Configuration Name" />
      <item value="get User Conf Method" />
      <item value="Failed to connect to github.com port 443 after 21025 ms: Couldn't connect to server" />
      <item value="Connection was reset" />
      <item value="task (current target is 11) and 'compileDebugKotlin' task (current target is 1.8) jvm target compatibility should be set to the same Java version." />
      <item value="Incorrect package=&quot;com.example.baseandroidaar&quot; found in source AndroidManifest.xml: C:\AndroidProject\BaseAndroid\app\src\main\AndroidManifest.xml. Setting the namespace via the package attribute in the source AndroidManifest.xml is no longer supported. Recommendation: remove package=&quot;com.example.baseandroidaar&quot; from the source AndroidManifest.xml: C:\AndroidProject\BaseAndroid\app\src\main\AndroidManifest.xml." />
      <item value="com.android.build.gradle.internal.crash.ExternalApiUsageException: groovy.lang.MissingPropertyException: Could not get unknown property 'versionName' for object of type com.android.build.gradle.internal.api.LibraryVariantOutputImpl. &gt; Could not get unknown property 'release' for SoftwareComponentInternal set of type org.gradle.api.internal.component.DefaultSoftwareComponentContainer." />
      <item value="package attribute is specified in the source AndroidManifest.xml, it can be migrated automatically to the namespace value in the build.gradle file using the AGP Upgrade Assistant; please refer to https:developer.android.comstudiobuildagp-upgrade-assistant for more information." />
      <item value="Namespace not specified. Please specify a namespace in the module's build.gradle file like so:" />
      <item value="set Current Printer" />
      <item value="get Printers Vector" />
      <item value="finish Edit Mode" />
      <item value="is Sure Size Print" />
      <item value="begin Print" />
      <item value="constructor" />
      <item value="Inject" />
      <item value="Use this if you want to return Flow to ViewModel" />
      <item value="repeatOnLifecycle launches the block in a new coroutine every time the lifecycle is in the STARTED state (or above) and cancels it when it's STOPPED." />
      <item value="Start a coroutine in the lifecycle scope viewLifecycleOwner.lifecycleScope.launch {" />
      <item value="current" />
      <item value="Mutable State Flow" />
      <item value="State Flow" />
      <item value="An {@linkplain Scope unscoped} {@link Provider}. While a {@link Provider} &lt;i&gt;may&lt;i&gt; apply scoping semantics while providing an instance, a factory implementation is guaranteed to exercise the binding logic ({@link Inject} constructors, {@link Provides} methods) upon each call to {@link get}. &lt;p&gt;Note that while subsequent calls to {@link get} will create new instances for bindings such as those created by {@link Inject} constructors, a new instance is not guaranteed by all bindings. For example, {@link Provides} methods may be implemented in ways that return the same instance for each call." />
      <item value="Convert database results CurrentWeatherDB to CurrentWeather UI domain object" />
      <item value="Update View with the latest currentWeatherDB Writes to the value property of MutableStateFlow, adding a new element to the flow and updating all of its collectors" />
      <item value="A currentWeather displayed on the screen. publicly exposed live data, not mutable" />
      <item value="A dailyForecastWeather displayed on the screen. publicly exposed live data, not mutable" />
      <item value="Hilt View Model" />
      <item value="repeat On Lifecycle" />
      <item value="Current Weather View Model Factory" />
      <item value="Provider" />
      <item value="Interface for classes whose instances can be written to and restored from a {@link Parcel}. Classes implementing the Parcelable interface must also have a non-null static field called &lt;code&gt;CREATOR&lt;code&gt; of a type that implements the {@link Parcelable.Creator} interface. &lt;p&gt;A typical implementation of Parcelable is:&lt;p&gt; &lt;div&gt; &lt;div class=&quot;ds-selector-tabs&quot;&gt;&lt;section&gt;&lt;h3 id=&quot;kotlin&quot;&gt;Kotlin&lt;h3&gt; &lt;pre class=&quot;prettyprint lang-kotlin&quot;&gt;" />
      <item value="Parcelable" />
      <item value="WEATHER BASE URL" />
      <item value="If a binding adapter provides the getter, check that the adapter is annotated correctly and that the parameter type matches." />
      <item value="ACTION DOWN" />
      <item value="get Local Class Name" />
      <item value="The number of millis in the future from the call" />
      <item value="millis In Future" />
      <item value="count Down Interval" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="124" />
        <entry key="ENGLISH" value="125" />
      </map>
    </option>
  </component>
</application>