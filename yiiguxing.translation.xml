<application>
  <component name="AppStorage">
    <histories>
      <item value="Keep" />
      <item value="Cleartext HTTP traffic to www.baidu.com not permitted" />
      <item value="[Penguin]can't get PerfManager" />
      <item value="git@github.com: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists." />
      <item value="kex_exchange_identification: Connection closed by remote host Connection closed by 20.205.243.166 port 22 fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists." />
      <item value="no draw overlay permission" />
      <item value="The permission should be defined JO- com.example.plushservice.permission.JOPERATE_MESSAGE" />
      <item value="get Receiver Permission:com.example.plushservice.permission.JPUSH MESSAGE" />
      <item value="No Network Security Config specified, using platform default" />
      <item value="Attribute meta-dataJPUSH_CHANNEL@value at AndroidManifest.xml requires a placeholder substitution but no value for &lt;JPUSH_CHANNEL&gt; is provided." />
      <item value="A failure occurred while executing" />
      <item value="Unable to delete directory 'C:\Users\TAN18\.gradle\caches\transforms-3\45748b5940486b718adf20af2b1847e6\transformed' Failed to delete some children. This might happen because a process has files open or has its working directory set in the target directory." />
      <item value="Flag for requesting that window content changes should be animated using a TransitionManager. The TransitionManager is set using setTransitionManager(TransitionManager). If none is set, a default TransitionManager will be used. See Also: setContentView" />
      <item value="uild was configured to prefer settings repositories over project repositories but repository 'flatDir' was added by build file 'jiguang\build.gradle'" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="14" />
        <entry key="ENGLISH" value="15" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1676991203247" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1682305211757" />
  </component>
  <component name="Translation.States">
    <histories>
      <item value="An {@linkplain Scope unscoped} {@link Provider}. While a {@link Provider} &lt;i&gt;may&lt;i&gt; apply scoping semantics while providing an instance, a factory implementation is guaranteed to exercise the binding logic ({@link Inject} constructors, {@link Provides} methods) upon each call to {@link get}. &lt;p&gt;Note that while subsequent calls to {@link get} will create new instances for bindings such as those created by {@link Inject} constructors, a new instance is not guaranteed by all bindings. For example, {@link Provides} methods may be implemented in ways that return the same instance for each call." />
      <item value="Convert database results CurrentWeatherDB to CurrentWeather UI domain object" />
      <item value="Update View with the latest currentWeatherDB Writes to the value property of MutableStateFlow, adding a new element to the flow and updating all of its collectors" />
      <item value="A currentWeather displayed on the screen. publicly exposed live data, not mutable" />
      <item value="A dailyForecastWeather displayed on the screen. publicly exposed live data, not mutable" />
      <item value="Inject" />
      <item value="Hilt View Model" />
      <item value="repeatOnLifecycle launches the block in a new coroutine every time the lifecycle is in the STARTED state (or above) and cancels it when it's STOPPED." />
      <item value="repeat On Lifecycle" />
      <item value="Current Weather View Model Factory" />
      <item value="Provider" />
      <item value="Interface for classes whose instances can be written to and restored from a {@link Parcel}. Classes implementing the Parcelable interface must also have a non-null static field called &lt;code&gt;CREATOR&lt;code&gt; of a type that implements the {@link Parcelable.Creator} interface. &lt;p&gt;A typical implementation of Parcelable is:&lt;p&gt; &lt;div&gt; &lt;div class=&quot;ds-selector-tabs&quot;&gt;&lt;section&gt;&lt;h3 id=&quot;kotlin&quot;&gt;Kotlin&lt;h3&gt; &lt;pre class=&quot;prettyprint lang-kotlin&quot;&gt;" />
      <item value="Parcelable" />
      <item value="WEATHER BASE URL" />
      <item value="If a binding adapter provides the getter, check that the adapter is annotated correctly and that the parameter type matches." />
      <item value="ACTION DOWN" />
      <item value="get Local Class Name" />
      <item value="The number of millis in the future from the call" />
      <item value="millis In Future" />
      <item value="count Down Interval" />
      <item value="@param millisInFuture The number of millis in the future from the call to {@link start()} until the countdown is done and {@link onFinish()} is called. @param countDownInterval The interval along the way to receive {@link onTick(long)} callbacks." />
      <item value="Net Error Deal Utils" />
      <item value="token Verification" />
      <item value="to Millis" />
      <item value="to Minutes" />
      <item value="Equivalent to {@link convert(long, TimeUnit) MINUTES.convert(duration, this)}. @param duration the duration @return the converted duration, or {@code Long.MIN_VALUE} if conversion would negatively overflow, or {@code Long.MAX_VALUE} if it would positively overflow." />
      <item value="Returns: the converted duration, or Long.MIN_VALUE if conversion would negatively overflow, or Long.MAX_VALUE if it would positively overflow. Since: 1.6" />
      <item value="et deadline which is the maximum scheduling latency. The job will be run by this deadline even if other requirements (including a delay set through setMinimumLatency(long)) are not met. Because it doesn't make sense setting this property on a periodic job, doing so will throw an IllegalArgumentException when build() is called. See Also: getMaxExecutionDelayMillis()" />
      <item value="delay in milliseconds before task is to be executed." />
      <item value="verified" />
      <item value="dispatch Touch Event" />
      <item value="type – type of alarm. triggerAtMillis – time in milliseconds that the alarm should go off, using the appropriate" />
      <item value="trigger At Millis" />
      <item value="Click on the blank area to shadow the soft keyboard" />
      <item value="transform" />
      <item value="Returns the first non-null value produced by [transform] function being applied to elements of this collection in iteration order, or `null` if no non-null value was produced." />
      <item value="Returns the first non-null value produced by [transform] function being applied to elements of this collection in iteration order, or `null` if no non-null value was produced. @sample samples.collections.Collections.Transformations.firstNotNullOf" />
      <item value="Not Loading" />
      <item value="item Animator" />
      <item value="add Duration" />
      <item value="Slide In Right Animator" />
      <item value="Could not set unknown property 'nav_version' for object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler." />
      <item value="At this point the view has been loaded and set to true" />
      <item value="Indicates that the ViewPager2 is in an idle, settled state. The current page is fully in view and no animation is in progress." />
      <item value="Value to indicate that the default caching mechanism of RecyclerView should be used instead of explicitly prefetch and retain pages to either side of the current page. @see setOffscreenPageLimit(int)" />
      <item value="Platform declaration clash: The following declarations have the same JVM signature (getSearchModel()LcomexamplenfctoolsviewviewmodelSearchOrdersViewModel;):" />
      <item value="Platform declaration clash: The following declarations have the same JVM signature (getLauncher()LandroidxactivityresultActivityResultLauncher;):" />
      <item value="have the same JVM signature (getDataModel()LcomexamplenfctoolsviewviewmodelSearchOrdersViewModel;): fun `&lt;get-dataModel&gt;`(): SearchOrdersViewModel defined in com.example.nfctools.view.ui.fragment.SearchFragment fun getDataModel(): SearchOrdersViewModel defined in com.example.nfctools.view.ui.fragment.SearchFragment" />
      <item value="get External Files Dir" />
      <item value="is Directory" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="90" />
        <entry key="ENGLISH" value="91" />
      </map>
    </option>
  </component>
</application>